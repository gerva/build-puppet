# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at http://mozilla.org/MPL/2.0/.

# number of tries to make between attempts to run puppet
REBOOT_AFTER=10
PUPPETMASTERS=$(< /etc/puppet/puppetmasters.txt)

# note that --test implies --detailed-exitcodes, which we don't want
PUPPET_OPTIONS="--onetime --no-daemonize --logdest=console --logdest=syslog --color=false"

run_puppet() {
    puppet_server="$1"
    echo $"Running puppet agent against server '$puppet_server'"

    # check for 'err:' in the output; this catches errors even
    # when the puppet exit status is incorrect.
    tmp=`mktemp /tmp/puppet-outputXXXXXX`
    /usr/bin/puppet agent $PUPPET_OPTIONS --server ${puppet_server} > $tmp 2>1
    retval=$?
    if grep -q "^err:" $tmp
    then
        retval=1
    fi

    rm $tmp
    return $retval
}

run_until_success() {
    count=0
    success=false
    while ! $success
    do
        for puppetmaster in $PUPPETMASTERS; do
            # try running puppet, and sleep 60s if it fails
            if run_puppet $puppetmaster; then
                success=true
                break
            fi
            sleep 60
        done

        # If DHCP fails to get a (correct) IP address for this system, then we
        # would sit in this loop until help arrives, which can be a long time.
        # In theory, DHCP should block until it gets an address, but this is
        # not the case - see bug 636390.  So we bail out after REBOOT_AFTER
        # tries, in hopes we'll get better info from DHCP.
        count=$((count+1))
        if [ $count -gt $REBOOT_AFTER ]; then
            do_reboot
        fi
    done
}

do_reboot() {
    echo "maybe a reboot will help.."
    if [ -x /sbin/reboot ]; then
        /sbin/reboot
    else
        /usr/bin/reboot
    fi
    sleep 120
}
